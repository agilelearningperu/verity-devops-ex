pipeline {
    agent any
    stages {
        stage('Clean') {
                    steps{
                        sh 'mvn clean'
                    }
        }

        stage('PMD') {
                    steps {
                        sh 'mvn pmd:pmd'
                    }
                    post {
                       always {
                          recordIssues enabledForFailure: true, tool: pmdParser(pattern: '**/target/pmd.xml')
                       }
                    }
                }
        stage('Compile') {
                            steps{
                                sh 'mvn compiler:compile'
                            }
                }

        stage('Code Analysis') {
                    steps {
        			 script {
                  scannerHome = tool 'sonar-scanner'
                }
        				withSonarQubeEnv('sonarqube')
        				{
        				sh "${scannerHome}/bin/sonar-scanner"
        				}
        			}
        		}

        stage('Unit Test') {
                    steps {
                        sh 'mvn test'
                    }
                    post {
                        always {
                            junit 'target/surefire-reports/*.xml'
                        }
                    }
                }
        stage('Code Coverage') {
                    steps {
                        //Generate coverage report
                        step([
                            $class: 'JacocoPublisher'
                        ])
                    }
                }
        stage('Install') {
                    steps {
                        sh 'mvn install -DskipTests'
                    }
                }

        		stage('Launch Tomcat Server') {
                    steps {
                        sh '/tmp/apache-tomcat-9.0.20/bin/startup.sh'
                    }
                }

        		stage('Deploy War on Tomcat Server') {
                    steps {
                        sh 'cp /var/jenkins_home/workspace/verity-devops-ex/target/ExpenseApp-1.war /tmp/apache-tomcat-9.0.20/webapps'
                    }
                }

        		stage('API Test') {
                    steps {
        				//Change git url below as per your forked github repository URL
        				git url: 'https://github.com/agilelearningperu/EMAPITests-ex.git'
                    	sh 'mvn -Dtest=ExpenseManagerAPITest test'
                    }
                }
        		//Code ends for stage API Test


        		//Code starts for stage System Test
        		stage('System Test') {
                    steps {
        				//Change git url below as per your forked github repository URL
        				git url: 'https://github.com/agilelearningperu/EMSystemTests-ex.git'
                    	sh 'mvn -Dtest=ExpenseManagerSystemTest test'
                    }
                }
        stage('BDD Test') {
                    steps {
        				//Change git url below as per your forked github repository URL
        				git url: 'https://github.com/agilelearningperu/EMSystemTests_BDD.git'
                    	sh 'mvn -Dtest=TestRunner test'
                    }
                }
    }
}